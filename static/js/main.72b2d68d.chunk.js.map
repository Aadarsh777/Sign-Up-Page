{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","email","setEmail","password","setPassword","borderEmail","setBorderEmail","borderPassword","setBorderPassword","pEmail","setPEmail","pPassword","setPPassword","className","onSubmit","event","target","defaultValue","length","test","preventDefault","value","style","border","onChange","type","placeholder","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gNAiDeA,MA9Cf,WAEE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAsCJ,mBAAS,IAA/C,mBAAOK,EAAP,KAAoBC,EAApB,KACA,EAA4CN,mBAAS,IAArD,mBAAOO,EAAP,KAAuBC,EAAvB,KACA,EAA4BR,mBAAS,IAArC,mBAAOS,EAAP,KAAeC,EAAf,KACA,EAAkCV,mBAAS,IAA3C,mBAAOW,EAAP,KAAkBC,EAAlB,KAuBA,OACE,qBAAKC,UAAU,MAAf,SACE,sBAAKA,UAAU,UAAf,UACE,oBAAIA,UAAU,UAAd,yBACE,uBAAMC,SAjBd,SAAsBC,GAEhBA,EAAMC,OAAO,GAAGC,aAAaC,QAAU,IADlC,yJAC2CC,KAAKJ,EAAMC,OAAO,GAAGC,eACvEF,EAAMK,iBACNd,EAAe,qBACfI,EAAU,uDACFK,EAAMC,OAAO,GAAGK,MAAMH,OAAS,IACvCH,EAAMK,iBACNZ,EAAkB,qBAClBI,EAAa,mDAQqBC,UAAU,WAAxC,UACE,uBAAOS,MAAO,CAACC,OAAQlB,GAAcmB,SA1B/C,SAAsBT,GACpB,OAAOb,EAASa,EAAMC,OAAOK,QAyBwCR,UAAU,YAAYY,KAAK,OAAOC,YAAY,QAAQL,MAAOpB,IAC1H,mBAAGY,UAAU,cAAb,SAA4BJ,IAC5B,uBAAOa,MAAO,CAACC,OAAQhB,GAAiBiB,SAxBlD,SAAuBT,GACrB,OAAOX,EAAYW,EAAMC,OAAOK,QAuByCR,UAAU,YAAYY,KAAK,WAAWC,YAAY,WAAWL,MAAOlB,IACrI,mBAAGU,UAAU,cAAb,SAA4BF,IAC5B,wBAAQE,UAAU,aAAaY,KAAK,SAApC,6BC9BGE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.72b2d68d.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\"\n\nfunction App() {\n\n  const [email, setEmail] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n  const [borderEmail, setBorderEmail] = useState(\"\")\n  const [borderPassword, setBorderPassword] = useState(\"\")\n  const [pEmail, setPEmail] = useState(\"\")\n  const [pPassword, setPPassword] = useState(\"\")\n\n  function handleChange(event){\n    return setEmail(event.target.value)\n  }\n\n  function handleChange2(event) {\n    return setPassword(event.target.value)\n  }\n\n  function handleSubmit(event) {\n    let re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    if (event.target[0].defaultValue.length <= 0 || !re.test(event.target[0].defaultValue)){\n      event.preventDefault();\n      setBorderEmail(\"2px solid #ff0000\");\n      setPEmail(\"⚠️ email must be in format abc@gmail.com\")\n    }else if (event.target[1].value.length < 8) {\n      event.preventDefault();\n      setBorderPassword(\"2px solid #ff0000\");\n      setPPassword(\"⚠️ password must be of 8 characters\")\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"sign_up\">\n        <h1 className=\"heading\">SignUp Page</h1>\n          <form onSubmit={handleSubmit} className=\"app_form\">\n            <input style={{border: borderEmail}} onChange={handleChange} className=\"app_input\" type=\"text\" placeholder=\"Email\" value={email} />\n            <p className=\"invalid_msg\">{pEmail}</p>\n            <input style={{border: borderPassword}} onChange={handleChange2} className=\"app_input\" type=\"password\" placeholder=\"Password\" value={password} />\n            <p className=\"invalid_msg\">{pPassword}</p>\n            <button className=\"app_button\" type=\"submit\">Submit</button>\n          </form>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}